env:
  SOME_VAR: some_value

up:
  - go:
      version: '1.17.3'
      modules: true
  - homebrew:
    - curl
    - shellcheck
    - golangci/tap/golangci-lint
  - apt:
    - curl
    - shellcheck
  - custom:
      name: Install golangci-lint
      met?: which golangci-lint
      meet: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.43.0

commands:
  test:
    desc: Run the unittests
    run: script/test

  integration:
    desc: Run the integration tests with Bash
    run: |
      export TEST_DOCKER_IMAGE=ghcr.io/devbuddy/docker-testing:sha-f11e362 
      docker pull $TEST_DOCKER_IMAGE
      TEST_SHELL=bash go test -v ./tests

  integration-zsh:
    desc: Run the integration tests with Zsh
    run: |
      export TEST_DOCKER_IMAGE=ghcr.io/devbuddy/docker-testing:sha-f11e362 
      docker pull $TEST_DOCKER_IMAGE
      TEST_SHELL=zsh go test -v ./tests

  lint:
    desc: Lint the project
    run: script/lint

  lint-shell:
    desc: Lint the shell scripts
    run: shellcheck script/*

  ci:
    desc: Run all tests as CI would do
    run: script/test && script/lint && TEST_SHELL=zsh go test -v ./tests

  release:
    desc: Create a new release
    run: script/release.py release
  patch:
    desc: Create a new patch release
    run: script/release.py patch
  rc:
    desc: Create a new release-candidate or increment the last release-candidate
    run: script/release.py release-candidate
  releaselog:
    desc: Show the commits since the last tag
    run: git log `git describe --tags --abbrev=0`..HEAD --pretty=format:'%s'

  godoc: (sleep 1; open http://0.0.0.0:6060/pkg/github.com/devbuddy/devbuddy/pkg/)& godoc -http=:6060

  install:
    desc: Build and install DevBuddy in ${GOPATH}/bin
    run: script/install-dev.sh

  build:
    desc: Build all bud binaries
    run: script/buildall

open:
  milestone: https://github.com/devbuddy/devbuddy/milestone/1
