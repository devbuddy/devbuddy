name: tests

on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:

jobs:
  linters:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.33

  tests:
    name: go test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: "1.15.x"
      - run: go test -timeout 10s -cover ./pkg/...
      - run: docker build -t docker-shells tests/context/expect/docker-shells
      - run: go test -timeout 10s -cover -v ./tests/context/expect

  tests-bash:
    name: bash tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: "1.15.x"
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - run: cd tests/docker-images; ./build.sh
      - run: TEST_SHELL=bash go test -cover -v ./tests

  tests-zsh:
    name: zsh tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: "1.15.x"
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - run: cd tests/docker-images; ./build.sh
      - run: TEST_SHELL=zsh go test -cover -v ./tests

  release:
    name: release
    needs: [linters, tests, tests-bash, tests-zsh]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: "1.15.x"
      - run: script/buildall
      - run: ls -l dist
      - run: grep . dist/*.sha256
      - name: publish
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: dist/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
